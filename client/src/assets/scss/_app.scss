// This is SCSS not provided by the designer ... it's here so
// that we can leave what the designer provided unchanged,
// making it easier to integrate designer changes.
//
// This is pulled in by `style.scss`

// Without this, the placeholder seems to be pulled up, relative
// to where you'd think it should be. For instance, in the login form.
input::placeholder {
  line-height: 1.0;
}

// So we don't need a href to get the pointer cursor
a {
  cursor: pointer;
}

// CSS for an overlay. So, the idea is that we have a structure that looks like
// this:
//
// <div class="overlay">
//     <div class="modal">
//
//     </div>
// </div>
//
// ... other stuff
//
// The position: fixed etc. will size the overlay to be 100% of the viewport.
//
// The z-index will put this in front of the other stuff, blocking clicks to
// other things.
//
// The background-color dims everything that isn't in the modal itself (i.e.
// the other stuff).
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 35000;
  background-color: rgba(0,0,0,0.5);
}

// CSS for the modal itself, inside an overlay. We center
// the modal vertically inside the viewport.
.overlay > .modal {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

// Use Nunito for headers
.ui.header {
  font-family: $font;
}

.links-body {
  margin: 0;
  margin-top: 24px;
  padding: 0;
  list-style: none;

  li {
    display: inline-block;
    margin-right: 24px;
  }

  a {
    display: block;
    width: 54px;
    height: 54px;
    background: #fff;
    border-radius: 50%;
    position: relative;
  }

  li.active a:before {
    width: 68px;
    height: 68px;
    border: 3px solid #00374f;
    content: " ";
    display: block;
    border-radius: 50%;
    position: absolute;
    top: -7px;
    left: -7px;
  }

  .count {
    position: absolute;
    font-size: 1rem; //14px;
    font-family: $font-alt;
    font-weight: 500;
    top: 8px;
    right: 10px;
    color: #0393db;
    line-height: 1;
  }
}

// These are from the SVG conversion for the Z-score charts.  I'm gradually
// converting the `st...` to more meaningful names.
svg.z-score {
  &.boys {
    .gender {
      fill: #0297D6;
    }
  }

  &.girls {
    .gender {
      fill: #E37EB3;
    }
  }

  .z-score-frame {
    fill: #231F20;
  }

  .z-score-semibold {
    font-family: 'Nunito-SemiBold';
  }

  .z-score-font-sm {
    font-size: 9.5px;
  }

  .z-score-grey {
    fill: #424242;
  }

  .z-score-black {
    fill: #FFFFFF;
  }

  .zero-to-neg-two {
    opacity: 0.5;
    fill: #00853F;
  }

  .neg-two-to-neg-three {
    opacity: 0.5;
    fill: #F9E100;
  }

  .below-neg-three {
    opacity: 0.5;
    fill: #E31837;
  }

  .above-zero {
    opacity: 0.5;
    fill: #00853F;
  }

  .st10 {
    fill: none;
    stroke: #77787B;
    stroke-width: 0.8;
  }

  .st12 {
    font-family: 'Nunito-Bold';
  }

  .st13 {
    font-size: 26.5px;
  }

  .st14 {
    letter-spacing: -1;
  }

  .st15 {
    font-size: 14px;
  }

  .st16 {
    font-size: 8px;
  }

  .st17 {
    font-size: 12px;
  }

  .st18 {
    fill: none;
    stroke: #77787B;
    stroke-width: 0.5;
  }

  .st19 {
    fill: none;
    stroke: #9D9FA2;
    stroke-width: 0.2;
  }

  .st20 {
    font-size: 10px;
  }

  .st21 {
    fill: none;
    stroke: #77787B;
    stroke-width: 1.5;
  }

  .zero-line {
    fill: #00853F;
  }

  .two-line {
     fill: #E31837;
  }

  .st23 {
    font-size: 12.5145px;
  }

  .st24 {
    fill: #E24301;
  }
}
