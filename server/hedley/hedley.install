<?php

/**
 * @file
 * Installation logic for Hedley.
 */

/**
 * Implements hook_install().
 */
function hedley_install() {
  hedley_standard_install();

  // Fixes problems when the CSV files used for importing have been created
  // on a Mac, by forcing PHP to detect the appropriate line endings.
  ini_set('auto_detect_line_endings', TRUE);

  // Enable our themes.
  theme_enable(['bartik']);

  // Set the default theme.
  variable_set('theme_default', 'bartik');
  variable_set('admin_theme', 'bartik');

  // Enable node view page override by Page manager module.
  variable_set('page_manager_node_view_disabled', FALSE);

  variable_set('node_admin_theme', TRUE);

  // Set required date API variables.
  // See date_api_status().
  date_default_timezone_set('Asia/Jerusalem');
  variable_set('date_default_timezone', 'Asia/Jerusalem');
  variable_set('date_first_day', 1);

  // Setup private files.
  variable_set('file_private_path', 'sites/default/files/private');

  // Set authentication token expiration period to 5 years.
  variable_set('restful_token_auth_expiration_period', 'P5Y');

  // Perform several of the updates that aren't handled in
  // `hedley_standard_install`, and are needed on a fresh install.
  hedley_update_7002();
  hedley_update_7003();
  hedley_update_7004();
  hedley_update_7005();
  hedley_update_7012();
  hedley_update_7013();
  hedley_update_7014();
  hedley_update_7015();
  hedley_update_7016();
  hedley_update_7032();

  hedley_initial_sync_permissions();
}

/**
 * Copied from Standard profile -- standard_install()
 */
function hedley_standard_install() {
  // Add text formats.
  $filtered_html_format = [
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => [
      // URL filter.
      'filter_url' => [
        'weight' => 0,
        'status' => 1,
      ],
      // HTML filter.
      'filter_html' => [
        'weight' => 1,
        'status' => 1,
      ],
      // Line break filter.
      'filter_autop' => [
        'weight' => 2,
        'status' => 1,
      ],
      // HTML corrector filter.
      'filter_htmlcorrector' => [
        'weight' => 10,
        'status' => 1,
      ],
    ],
  ];
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = [
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => [
      // URL filter.
      'filter_url' => [
        'weight' => 0,
        'status' => 1,
      ],
      // Line break filter.
      'filter_autop' => [
        'weight' => 1,
        'status' => 1,
      ],
      // HTML corrector filter.
      'filter_htmlcorrector' => [
        'weight' => 10,
        'status' => 1,
      ],
    ],
  ];
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Enable some standard blocks.
  $default_theme = variable_get('theme_default', 'bartik');

  $values = [
    [
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ],
    [
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -1,
      'region' => 'search_box',
      'pages' => '',
      'cache' => -1,
    ],
    [
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ],
    [
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ],
    [
      'module' => 'menu',
      'delta' => 'menu-ihangane-admin-menu',
      'theme' => $default_theme,
      'status' => 0,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ],
    [
      'module' => 'hedley_admin',
      'delta' => 'ihangane_sidebar_menu',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ],
  ];
  $query = db_insert('block')->fields([
    'module',
    'delta',
    'theme',
    'status',
    'weight',
    'region',
    'pages',
    'cache',
  ]);
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  // Enable user picture support and set the default to a square
  // thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Enable default permissions for system roles.
  $permissions = [
    'access content',
    // "View user profiles" is for viewing the task_assignee field.
    'access user profiles',
    filter_permission_name($filtered_html_format),
  ];
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, $permissions);

  // Create a default role for site administrators, with all available
  // permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Creating a E-ledger viewer role and add the permissions.
  $ledger_viewer_role = new stdClass();
  $ledger_viewer_role->name = 'E-ledger viewer';
  user_role_save($ledger_viewer_role);

  // Creating a Nurse role and add the permissions.
  $nurse_role = new stdClass();
  $nurse_role->name = 'nurse';
  user_role_save($nurse_role);

  $permissions = [];
  $nurse_permitted_types = [
    'attendance',
    'family_planning',
    'height',
    'muac',
    'nutrition',
    'photo',
    'weight',
  ];

  hedley_add_nurse_permissions_for_content_type($nurse_permitted_types);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(['uid' => 1, 'rid' => $admin_role->rid])
    ->execute();

  // Update the menu router information.
  variable_set('menu_rebuild_needed', TRUE);

  node_access_rebuild(TRUE);
}

/**
 * Adds the permissions for the specified content types.
 *
 * @param array $content_types
 *   A list of content type machine names.
 */
function hedley_add_nurse_permissions_for_content_type(array $content_types) {
  $permissions = [];
  foreach ($content_types as $type) {
    $permissions[] = "create {$type} content";
    $permissions[] = "edit any {$type} content";
    $permissions[] = "edit own {$type} content";
  }

  $nurse_role = user_role_load_by_name('nurse');
  user_role_grant_permissions($nurse_role->rid, $permissions);
}

/**
 * Setup initial sync permissions.
 */
function hedley_initial_sync_permissions() {
  $synced = [
    'attendance',
    'catchment_area',
    'child',
    'clinic',
    'counseling_schedule',
    'counseling_session',
    'counseling_topic',
    'family_planning',
    'health_center',
    'height',
    'mother',
    'muac',
    'nurse',
    'nutrition',
    'participant_consent',
    'participant_form',
    'photo',
    'session',
    'weight',
  ];

  hedley_add_sync_permissions_for_content_type($synced);
}

/**
 * Adds the permissions for the specified content types.
 *
 * @param array $content_types
 *   A list of content type machine names.
 */
function hedley_add_sync_permissions_for_content_type(array $content_types) {
  $permissions = [];
  foreach ($content_types as $type) {
    $permissions[] = "create {$type} content";
    $permissions[] = "edit any {$type} content";
    $permissions[] = "edit own {$type} content";
  }

  $sync_role = user_role_load_by_name('sync');
  user_role_grant_permissions($sync_role->rid, $permissions);
}

/**
 * Adds family_planning permission for nurses.
 */
function hedley_update_7001() {
  $content_types = ['family_planning'];
  hedley_add_nurse_permissions_for_content_type($content_types);
}

/**
 * Installs the new ihangane_admin module.
 */
function hedley_update_7002() {
  $modules = ['hedley_admin'];
  module_enable($modules);

  $query = db_update('block');
  $query->fields([
    'status' => 1,
    'region' => 'sidebar_first',
  ]);
  $query->condition('delta', 'menu-ihangane-admin-menu');
  $query->condition('theme', 'bartik');
  $query->execute();
}

/**
 * Installs the Views Data Export module.
 */
function hedley_update_7003() {
  $modules = ['views_data_export'];
  module_enable($modules);
}

/**
 * Revokes the admin user access permission for the administrator role.
 */
function hedley_update_7004() {
  $admin_role = user_role_load_by_name('administrator');
  user_role_revoke_permissions($admin_role->rid, ['access administration menu']);
}

/**
 * Enable the Date Views for measurement filter and VBO export for CSV download.
 */
function hedley_update_7005() {
  $modules = ['date_views', 'vbo_export'];
  module_enable($modules);
}

/**
 * Enable new zscore module.
 */
function hedley_update_7006() {
  $modules = ['hedley_zscore'];
  module_enable($modules);
}

/**
 * Fix nutrition_sign abdominal-disortion to be abdominal-distention.
 */
function hedley_update_7007() {
  db_update('field_data_field_nutrition_signs')
    ->fields(['field_nutrition_signs_value' => 'abdominal-distention'])
    ->condition('field_nutrition_signs_value', 'abdominal-disortion')
    ->execute();
}

/**
 * Fix nutrition_sign abdominal-distention to be abdominal-distension.
 *
 * The previous fix had its own typo, so we'll fix it again.
 */
function hedley_update_7008() {
  db_update('field_data_field_nutrition_signs')
    ->fields(['field_nutrition_signs_value' => 'abdominal-distension'])
    ->condition('field_nutrition_signs_value', 'abdominal-distention')
    ->execute();
}

/**
 * Fix nutrition_sign in revisions table.
 *
 * We had previously just fixed the data table.
 */
function hedley_update_7009() {
  db_update('field_revision_field_nutrition_signs')
    ->fields(['field_nutrition_signs_value' => 'abdominal-distension'])
    ->condition('field_nutrition_signs_value', 'abdominal-disortion')
    ->execute();
}

/**
 * Remove the unused "hedley_examination" and "hedley_group" modules.
 */
function hedley_update_7010() {
  node_type_delete('examination');
  node_type_delete('group');

  $modules = [
    'hedley_group',
    'hedley_examination',
  ];

  module_disable($modules);
  drupal_uninstall_modules($modules);

  node_types_rebuild();
  menu_rebuild();
}

/**
 * Delete some now-unused fields.
 *
 * These were integer fields, which we've now re-created as float fields with
 * slightly different names. However, the features module does not
 * automatically delete them.
 */
function hedley_update_7011() {
  field_delete_field('field_z_score_age');
  field_delete_field('field_z_score_length');
}

/**
 * Enable new prepopulate module.
 */
function hedley_update_7012() {
  $modules = ['prepopulate'];
  module_enable($modules);
}

/**
 * Replaces old menu block with the new one.
 */
function hedley_update_7013() {
  $query = db_update('block');
  $query->fields([
    'status' => 0,
    'region' => 'sidebar_first',
  ]);
  $query->condition('delta', 'menu-ihangane-admin-menu');
  $query->condition('theme', 'bartik');
  $query->execute();

  $query = db_update('block');
  $query->fields([
    'status' => 1,
    'region' => 'sidebar_first',
  ]);
  $query->condition('delta', 'ihangane_sidebar_menu');
  $query->condition('theme', 'bartik');
  $query->execute();
}

/**
 * Enable title module.
 */
function hedley_update_7014() {
  $modules = ['title'];
  module_enable($modules);
}

/**
 * Adds counseling_session permission for nurses.
 */
function hedley_update_7015() {
  $content_types = ['counseling_session'];
  hedley_add_nurse_permissions_for_content_type($content_types);
}

/**
 * Enable the hedley_forms module.
 */
function hedley_update_7016() {
  $modules = ['hedley_forms'];
  module_enable($modules);

  $content_types = ['participant_consent'];
  hedley_add_nurse_permissions_for_content_type($content_types);
}

/**
 * Enable hedley_device module.
 */
function hedley_update_7017() {
  $modules = ['hedley_device'];
  module_enable($modules);
}

/**
 * Adds attendance permission for nurses.
 */
function hedley_update_7018() {
  $content_types = ['attendance'];
  hedley_add_nurse_permissions_for_content_type($content_types);
}

/**
 * Grant sync role permission for content types.
 */
function hedley_update_7019() {
  hedley_initial_sync_permissions();
}

/**
 * Enable hedley_health_center module.
 */
function hedley_update_7020() {
  $modules = ['hedley_health_center'];
  module_enable($modules);
}

/**
 * Setup private files.
 */
function hedley_update_7021() {
  variable_set('file_private_path', 'sites/default/files/private');
}

/**
 * E-ledger viewer role.
 */
function hedley_update_7022() {
  $ledger_viewer_role = new stdClass();
  $ledger_viewer_role->name = 'E-ledger viewer';
  user_role_save($ledger_viewer_role);
}

/**
 * Enable hedley_view_export.
 */
function hedley_update_7023() {
  module_enable(['advancedqueue', 'hedley_view_export']);

  user_role_grant_permissions(variable_get('user_admin_role'), ['hedley export views']);
}

/**
 * Enable smtp.
 */
function hedley_update_7024() {
  module_enable(['smtp']);
  variable_set('smtp_on', TRUE);
}

/**
 * Enable hedley_chw module.
 */
function hedley_update_7025() {
  $modules = ['hedley_chw'];
  module_enable($modules);
}

/**
 * Enable and configure mailsystem model.
 */
function hedley_update_7026() {
  $modules = ['mailsystem'];
  module_enable($modules);

  variable_set('mail_system', array('default-system' => 'SmtpMailSystem'));
}

/**
 * Enable hedley_acute_illness module.
 */
function hedley_update_7027() {
  $modules = ['hedley_acute_illness'];
  module_enable($modules);
}

/**
 * Enable the Hedley Stats and Hedley General modules.
 */
function hedley_update_7028() {
  module_enable(['hedley_stats', 'hedley_general']);
}

/**
 * Enable the Hedley Nutrition module.
 */
function hedley_update_7029() {
  module_enable(['hedley_nutrition']);
}

/**
 * Enable the Hedley Prenatal module.
 */
function hedley_update_7030() {
  module_enable(['hedley_prenatal']);
}

/**
 * Enable the Hedley Well Child module.
 */
function hedley_update_7031() {
  module_enable(['hedley_well_child']);
}

/**
 * Enable the Views Lite Pager module.
 */
function hedley_update_7032() {
  module_enable(['views_litepager']);
}
