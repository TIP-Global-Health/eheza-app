<?php

/**
 * @file
 * Code for the Hedley Health Center feature.
 */

include_once 'hedley_health_center.features.inc';

/**
 * Implements hook_node_insert().
 *
 * Crate CHW group for newly created village.
 */
function hedley_health_center_node_insert($node) {
  if ($node->type != 'village') {
    return;
  }

  // Create CHW group for new village.
  $wrapper = entity_metadata_wrapper('node', $node);
  $village_name =  $wrapper->label();
  $province = $wrapper->field_province->value();
  $district = $wrapper->field_district->value();
  $sector = $wrapper->field_sector->value();
  $cell = $wrapper->field_cell->value();
  $village = $wrapper->field_village->value();
  $health_center_id = $wrapper->field_health_center->getIdentifier();

  $clinic_node = entity_create('node', [
    'type' => 'clinic',
    'uid' => $node->uid,
  ]);

  $wrapper = entity_metadata_wrapper('node', $clinic_node);
  $wrapper->title->set("$village_name CHW group");
  $wrapper->field_health_center->set($health_center_id);
  $wrapper->field_village_ref->set($node->nid);
  $wrapper->field_group_type->set('chw');
  $wrapper->save();

  $clinic = $wrapper->getIdentifier();

  // Add participants to CHW group, based on mother's village.
  $residents_query = new EntityFieldQuery();
  // Load all residence from village.
  $residents = $residents_query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'person')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_province', 'value', $province)
    ->fieldCondition('field_district', 'value', $district)
    ->fieldCondition('field_sector', 'value', $sector)
    ->fieldCondition('field_cell', 'value', $cell)
    ->fieldCondition('field_village', 'value', $village)
    ->execute();

  if (empty($residents['node'])) {
    return;
  }

  // Load all relationship for village. Since we create relations only
  // for adults, we won't get duplicates here.
  $relationships_query = new EntityFieldQuery();
  $relationships = $relationships_query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'relationship')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_person', 'target_id', array_keys($residents['node']))
    ->execute();

  // Create participants for the clinic.
  // Todo: batches + node_load_multiple()
  foreach (array_keys($relationships['node']) as $relationship) {
    $relationships_wrapper = entity_metadata_wrapper('node', $relationship);
    $adult = $relationships_wrapper->field_person->getIdentifier();
    $child = $relationships_wrapper->field_related_to->getIdentifier();
    $related_by = $relationships_wrapper->field_related_by->value();
    $adult_activities = $related_by == 'parent' ? 'mother' : 'caregiver';

    $participant_node = entity_create('node', [
      'type' => 'pmtct_participant',
      'uid' => $node->uid,
    ]);
    $participant_wrapper = entity_metadata_wrapper('node', $participant_node);
    $participant_wrapper->field_adult->set($adult);
    $participant_wrapper->field_person->set($child);
    $participant_wrapper->field_adult_activities->set($adult_activities);
    $participant_wrapper->field_expected->set([
      'value' => date('Y-m-d'),
      'value2' => NULL,
    ]);
    $participant_wrapper->field_clinic->set($clinic);
    $participant_wrapper->save();
  }
}
