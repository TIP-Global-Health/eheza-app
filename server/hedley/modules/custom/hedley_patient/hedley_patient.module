<?php

/**
 * @file
 * Code for the Hedley Patient feature.
 */

include_once 'hedley_patient.features.inc';

/**
 * Implements hook_node_insert().
 */
function hedley_patient_node_insert($node) {
  hedley_patient_trigger_pusher_on_item_data_change($node);
}

/**
 * Implements hook_node_update().
 */
function hedley_patient_node_update($node) {
  if (!in_array($node->type, ['mother', 'child'])) {
    return;
  }
  // Make sure we get updated data.
  entity_get_controller('node')->resetCache();
  hedley_patient_trigger_pusher_on_item_data_change($node);
}

/**
 * Trigger a pusher event for a Item data.
 *
 * @param object $node
 *   A Item data node type.
 */
function hedley_patient_trigger_pusher_on_item_data_change($node) {
  if (!in_array($node->type, ['mother', 'child'])) {
    return;
  }

  if ($node->status == NODE_NOT_PUBLISHED) {
    // Node is not published.
    return;
  }

  $account = user_load($node->uid);

  switch ($node->type) {
    case 'child':
      $handler_name = 'children';
      break;

    case 'mother':
      $handler_name = 'mothers';
      break;

  }

  $handler = restful_get_restful_handler($handler_name);
  $handler->setAccount($account);
  $data = $handler->get($node->nid);

  $event_name = 'patient__update';

  hedley_pusher_trigger_event('general', $event_name, $data[0]);
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Add to a query which needs to get all entities without a 'field_relationship'
 * value (is null).
 */
function hedley_patient_query_exclude_existing_relationships_alter(QueryAlterableInterface $query) {
  $query->leftJoin('field_data_field_relationship', 'r', 'node.nid = r.entity_id');
  $query->isNull('r.field_relationship_value');
}
