<?php

/**
 * @file
 * Code for the Hedley Person feature.
 */

include_once 'hedley_person.features.inc';

define('HEDLEY_PERSON_EDUCATION_NONE', 0);
define('HEDLEY_PERSON_EDUCATION_PRIMARY', 1);
define('HEDLEY_PERSON_EDUCATION_VOCATIONAL', 2);
define('HEDLEY_PERSON_EDUCATION_SECONDARY', 3);
define('HEDLEY_PERSON_EDUCATION_DIPLOMA', 4);
define('HEDLEY_PERSON_EDUCATION_UNIVERSITY', 5);
define('HEDLEY_PERSON_EDUCATION_ADVANCED', 6);

define('HEDLEY_PERSON_GENDER_MALE', 'male');
define('HEDLEY_PERSON_GENDER_FEMALE', 'female');

define('HEDLEY_PERSON_RELATED_BY_CHILD', 'child');
define('HEDLEY_PERSON_RELATED_BY_PARENT_OF', 'parent');
define('HEDLEY_PERSON_RELATED_BY_CAREGIVER_FOR', 'caregiver');

/**
 * Get a relationships by a person.
 *
 * @param int $person_id
 *   The person node ID.
 * @param string $relation_type
 *   Optional; the type of the relation, can be either "parent" or "child".
 *
 * @return array
 *   Node IDs if they exist or empty array if no nodes exist.
 */
function hedley_person_get_relationships($person_id, $relation_type = HEDLEY_PERSON_RELATED_BY_PARENT_OF) {
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'relationship')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->range(0, 1);

  if ($relation_type == HEDLEY_PERSON_RELATED_BY_PARENT_OF) {
    $query
      ->fieldCondition('field_person', 'target_id', $person_id);
  }
  else {
    $query
      ->fieldCondition('field_related_to', 'target_id', $person_id);
  }

  $result = $query->execute();

  return !empty($result['node']) ? array_keys($result['node']) : [];
}
