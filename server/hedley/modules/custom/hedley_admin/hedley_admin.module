<?php

/**
 * @file
 * Code for the hedley admin feature.
 */

include_once 'hedley_admin.features.inc';

/**
 * Implements hook_theme_registry_alter().
 */
function hedley_admin_theme_registry_alter(&$theme_registry) {
  $theme_registry['vbo_export_csv']['function'] = 'hedley_admin_vbo_export_csv';
}

/**
 * Csv content builder function.
 */
function hedley_admin_vbo_export_csv($variables) {
  // Sanitize data.
  foreach ($variables['header'] as $key => $item) {
    $variables['header'][$key] = strtr($item, array($variables['separator'] => ' '));
  }

  $content_replacements = array(
    '\r\n' => ' ',
    '\n\r' => ' ',
    '\r' => ' ',
    '\n' => ' ',
    '\t' => ' ',
    $variables['separator'] => ' ',
  );
  foreach ($variables['rows'] as $row_key => $row) {
    foreach ($row as $cell_key => $cell) {
      $variables['rows'][$row_key][$cell_key] = strip_tags(strtr($cell, $content_replacements));
    }
  }

  $handle = fopen('php://temp', 'r+');
  fputcsv($handle, $variables['header']);
  foreach ($variables['rows'] as $row) {
    fputcsv($handle, $row);
  }
  rewind($handle);
  $csv_output = '';
  while (!feof($handle)) {
    $csv_output .= fread($handle, 8192);
  }
  fclose($handle);
  return $csv_output;
}

/**
 * Implements hook_block_info().
 */
function hedley_admin_block_info() {
  $blocks['ihangane_sidebar_menu'] = [
    'info' => t('E-Heza Admin Menu'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  ];

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function hedley_admin_block_view($delta) {
  if ($delta != 'ihangane_sidebar_menu') {
    return;
  }

  $query = db_select('menu_links', 'm');
  $query->fields('m', ['link_path', 'link_title', 'options']);
  $query->condition('menu_name', 'menu-ihangane-admin-menu');
  $query->orderBy('weight');

  $results = $query->execute()->fetchAll();

  $links = [];
  foreach ($results as $result) {
    $links[] = l($result->link_title, $result->link_path, unserialize($result->options));
  }

  $block = [
    'subject' => t('E-Heza Admin Menu'),
    'content' => [
      '#theme' => 'item_list',
      '#items' => $links,
      '#type' => 'ul',
    ],
  ];

  return $block;
}

/**
 * We do not allow to unpublish content, as it may break syncing.
 *
 * Implements hook_node_update().
 */
function hedley_admin_node_update($node) {
  if (($node->status != NODE_NOT_PUBLISHED) || ($node->original->status != NODE_PUBLISHED)) {
    // We're not unpublishing the node.
    return;
  }

  // Allow to override unpublishing restrictions.
  if (variable_get('hedley_super_user_mode', FALSE)) {
    return;
  }

  throw new Exception('Content unpublishing is forbidden!');
}

/**
 * We do not allow deleting content, as it may break syncing.
 *
 * Implements hook_node_delete().
 */
function hedley_admin_node_delete($node) {
  // Allow to override deletion restrictions.
  if (variable_get('hedley_super_user_mode', FALSE)) {
    return;
  }

  throw new Exception('Content deletion is forbidden!');
}

/**
 * Implements hook_views_pre_view().
 *
 * We would like to propagate the node argument (child)
 * for all the measurements (weight, height, muac), but
 * an URL like ledger/5/5/5 would be ugly.
 * So we propagate the first argument into the other
 * contextual filters by code.
 */
function hedley_admin_views_pre_view(&$view) {
  if ($view->name != 'ledger') {
    return;
  }
  if (empty($view->args[0])) {
    return;
  }
  $view->args[1] = $view->args[0];
  $view->args[2] = $view->args[0];
  $view->args[3] = $view->args[0];
}

/**
 * Implements hook_views_post_execute().
 *
 * Handle special Caregiver field.
 */
function hedley_admin_views_post_execute(&$view) {
  if ($view->name !== 'ledger') {
    return;
  }
  foreach ($view->result as $result) {
    // We have a Caregiver field in the output, where we'd like to simply
    // tell if the given person, displayed in another field, is a mother
    // or a caregiver. So we transform the output of the view to show
    // this boolean outcome.
    if ($result->field_field_related_by[0]['rendered']['#markup'] !== 'Caregiver for') {
      $result->field_field_related_by[0]['rendered']['#markup'] = '';
    }
    else {
      $result->field_field_related_by[0]['rendered']['#markup'] = t('X');
    }
  }
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Adds the proper grouping to the ledger.
 */
function hedley_admin_query_views_ledger_alter(QueryAlterableInterface $query) {
  // Modifying the query here, notice the reference handling.
  // @see https://api.drupal.org/api/drupal/includes!database!select.inc/function/SelectQueryInterface%3A%3AgetGroupBy/7.
  $fields =& $query->getGroupBy();
  $fields['node.nid'] = 'node.nid';
}
