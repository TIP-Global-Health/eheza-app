<?php

/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_node_insert().
 */
function hedley_case_management_node_insert($node) {
  $nutrition_triggers = hedley_case_management_nutrition_follow_up_types();
  $nutrition_triggers[] = 'home_visit_encounter';
  if (in_array($node->type, $nutrition_triggers)) {
    hedley_case_management_handle_nutrition_insert_trigger($node);
    return;
  }

  $acute_illness_triggers = [
    'acute_illness_follow_up',
    'acute_illness_encounter',
  ];
  if (in_array($node->type, $acute_illness_triggers)) {
    hedley_case_management_handle_acute_illness_insert_trigger($node);
    return;
  }

  $prenatal_triggers = [
    'prenatal_follow_up',
    'prenatal_encounter',
  ];

  if (in_array($node->type, $prenatal_triggers)) {
    hedley_case_management_handle_prenatal_insert_trigger($node);
  }
}

/**
 * Implements hook_node_update().
 */
function hedley_case_management_node_update($node) {
  if ($node->type != 'individual_participant') {
    return;
  }

  hedley_case_management_handle_update_trigger($node);
}

function hedley_case_management_handle_nutrition_insert_trigger($node) {
  $wrapper = entity_metadata_wrapper('node', $node);
  if ($node->type == 'home_visit_encounter') {
    $person_id = $wrapper->field_individual_participant->field_person->getIdentifier();
  }
  else {
    $person_id = $wrapper->field_person->getIdentifier();
  }

  if (empty($person_id)) {
    return;
  }

  hedley_case_management_resolve_nutrition_follow_ups($node->nid, $person_id);
}

function hedley_case_management_resolve_nutrition_follow_ups($nid, $person_id, $limit = 200) {
  $nutrition_follow_ups = hedley_case_management_nutrition_follow_up_types();

  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $nutrition_follow_ups, 'IN')
    ->propertyCondition('nid', $nid, '<')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_person', 'target_id', $person_id)
    ->addTag('exclude_resolved')
    ->range(0, $limit)
    ->execute();

  if (empty($result['node'])) {
    return;
  }

  foreach ($result['node'] as $follow_up) {
    hedley_case_management_resolve_follow_up($follow_up);
  }
}

function hedley_case_management_nutrition_follow_up_types() {
  return [
    'follow_up',
    'nutrition_follow_up',
    'well_child_follow_up',
  ];
}

function hedley_case_management_handle_acute_illness_insert_trigger($node) {
  $wrapper = entity_metadata_wrapper('node', $node);
  if ($node->type == 'acute_illness_encounter') {
    $participant = $wrapper->field_individual_participant->getIdentifier();
    $person_id = $wrapper->field_individual_participant->field_person->getIdentifier();
  }
  else {
    $participant = $wrapper->field_acute_illness_encounter->field_individual_participant->getIdentifier();
    $person_id = $wrapper->field_person->getIdentifier();
  }

  if (empty($person_id)) {
    return;
  }

  $encounters = hedley_person_encounters_for_individual_participant($participant);
  if (count($encounters) < 2) {
    return;
  }

  hedley_case_management_resolve_acute_illness_follow_ups($person_id, $encounters, $node->nid);
}

function hedley_case_management_resolve_acute_illness_follow_ups($person_id, $encounters, $to_nid = NULL, $limit = 200) {
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'acute_illness_follow_up')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_person', 'target_id', $person_id)
    ->fieldCondition('field_acute_illness_encounter', 'target_id', $encounters, 'IN')
    ->addTag('exclude_resolved')
    ->range(0, $limit);

  if (!empty($to_nid)) {
    $query->propertyCondition('nid', $to_nid, '<');
  }

  $result = $query->execute();
  if (empty($result['node'])) {
    return;
  }

  foreach ($result['node'] as $follow_up) {
    hedley_case_management_resolve_follow_up($follow_up);
  }
}

function hedley_case_management_handle_prenatal_insert_trigger($node) {
  $wrapper = entity_metadata_wrapper('node', $node);
  if ($node->type == 'prenatal_encounter') {
    $encounter_type = $wrapper->field_prenatal_encounter_type->value();
    if ($encounter_type == 'nurse') {
      // Action is triggered only for CHW encounters.
      return;
    }
    $person_id = $wrapper->field_individual_participant->field_person->getIdentifier();
  }
  else {
    $person_id = $wrapper->field_person->getIdentifier();
  }

  if (empty($person_id)) {
    return;
  }

  hedley_case_management_resolve_prenatal_follow_ups($person_id, $node->nid);
}

function hedley_case_management_resolve_prenatal_follow_ups($person_id, $to_nid = NULL, $limit = 200) {
  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'prenatal_follow_up')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_person', 'target_id', $person_id)
    ->addTag('exclude_resolved')
    ->range(0, $limit)
    ->execute();

  if (!empty($to_nid)) {
    $query->propertyCondition('nid', $to_nid, '<');
  }

  $result = $query->execute();
  if (empty($result['node'])) {
    return;
  }

  foreach ($result['node'] as $follow_up) {
    hedley_case_management_resolve_follow_up($follow_up);
  }
}

function hedley_case_management_handle_update_trigger($node) {
  $wrapper = entity_metadata_wrapper('node', $node);

  $type = $wrapper->field_encounter_type->value();
  if (!in_array($type, ['acute-illness', 'antenatal'])) {
    // We only track resolution of illnesses and pregnancies.
    return;
  }

  $wrapper_orig = entity_metadata_wrapper('node', $node->original);
  $outcome = $wrapper->field_outcome->value();
  $outcome_orig = $wrapper_orig->field_outcome->value();

  $outcome_set = empty($outcome_orig) && !empty($outcome);
  if (!$outcome_set) {
    return;
  }

  // Outcome was set, meaning that illness / pregnancy was concluded.
  // Therefore, we need to resolve all it's follow-ups.
  $person_id = $wrapper->field_person->getIdentifier();
  if ($type == 'acute-illness') {
    $encounters = hedley_person_encounters_for_individual_participant($node->nid);
    hedley_case_management_resolve_acute_illness_follow_ups($person_id, $encounters);
    return;
  }

  // We know we're dealing with pregnancy.
  hedley_case_management_resolve_prenatal_follow_ups($person_id);
}

function hedley_case_management_resolve_follow_up($nid) {
  $wrapper = entity_metadata_wrapper('node', $nid);
  $wrapper->field_date_concluded->set(time());
  $wrapper->save();
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Add to a query which to get all entities that have field_date_concluded set
 * not set (an indication that entity is not resolved).
 */
function hedley_case_management_query_exclude_resolved_alter(QueryAlterableInterface $query) {
  $query->leftJoin('field_data_field_date_concluded', 'dc', 'node.nid = dc.entity_id');
  $query->isNull('dc.field_date_concluded_value');
}


