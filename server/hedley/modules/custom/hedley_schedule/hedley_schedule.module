<?php

/**
 * @file
 * Code for the Hedley Schedule feature.
 */

include_once 'hedley_schedule.features.inc';

/**
 * Implements hook_node_delete().
 *
 * When deleting a "session" node, check if it's a training session and delete
 * all it's measurements if it is, if not, then we check if it has any
 * measurements at all and stop the deletion request if it does.
 *
 * @throws \Exception
 *   Doesn't allow deleting a session if it's not a training session and it has
 *   any measurements at all.
 */
function hedley_schedule_node_delete($node) {
  if ($node->type != 'session') {
    // Handles only "session" nodes deletions.
    return;
  }

  $wrapper = entity_metadata_wrapper('node', $node);
  // We need to delete the sessions measurements if the session is valid for
  // deletion.
  $measurement_types = [
    'family_planning',
    'height',
    'muac',
    'nutrition',
    'photo',
    'weight',
  ];

  if ($wrapper->field_training->value()) {
    foreach ($measurement_types as $measurement_type) {
      $measurement_nodes = hedley_activity_get_measurements_entities_by_session($wrapper->getIdentifier(), $measurement_type);
      node_delete_multiple($measurement_nodes);
    }
  }
  else {
    foreach ($measurement_types as $measurement_type) {
      $has_measurements = !empty(hedley_activity_get_measurements_entities_by_session($wrapper->getIdentifier(), $measurement_type)) ? TRUE : FALSE;

      // Don't allow deleting the session if it has any measurements.
      if ($has_measurements) {
        throw new Exception('This session cannot be deleted because it has existing measurements');
      }
    }
  }
}
