<?php

/**
 * @file
 * Code for the Hedley Aggregated NCDA feature.
 */

include_once 'hedley_aggregated_ncda.features.inc';

/**
 * Implements hook_menu().
 */
function hedley_aggregated_ncda_menu() {
  $items['admin/reports/aggregated-ncda'] = array(
    'title' => 'NCDA scoreboard',
    'description' => 'View aggregated NCDA scoreboard',
    'page callback' => 'hedley_aggregated_ncda_callback',
    'access callback' => 'hedley_aggregated_ncda_access',
  );

  return $items;
}

/**
 * Determines whether current user may access Aggregated NCDA scoreboard page.
 *
 * @return bool
 *   TRUE if the user has access, FALSE otherwise.
 */
function hedley_aggregated_ncda_access() {
  global $user;

  if (user_is_anonymous()) {
    return FALSE;
  }

  if ($user->uid == 1) {
    return TRUE;
  }

  return in_array('administrator', $user->roles);
}

/**
 * Callback function for the Aggregated NCDA scoreboard page.
 *
 * Adds JavaScript and CSS files to the page and initializes an Elm application
 * with the given settings.
 *
 * @return string
 *   The HTML markup for the Elm application.
 */
function hedley_aggregated_ncda_callback() {
  // Add application.
  drupal_add_js(drupal_get_path('module', 'hedley_aggregated_ncda') . '/js/elm-main.js');
  drupal_add_js(drupal_get_path('module', 'hedley_aggregated_ncda') . '/js/elm.js');

  // Add CSS.
  drupal_add_css(drupal_get_path('module', 'hedley_aggregated_ncda') . '/css/aggregated-ncda.css', 'file');

  // Getting a unique ID for the app.
  $app_id = drupal_html_id('elm-app');

  // Add settings.
  $settings = [
    'elm_apps' => [
      $app_id => [
        'data' => [],
      ],
    ],
  ];
  drupal_add_js($settings, 'setting');

  // Return the HTML markup for the Elm application.
  return '<div id="' . $app_id . '"></div>';
}

/**
 * Generates NCDA data for a given person and stores it in a node.
 *
 * @param int $person_id
 *   The ID of the person for whom to generate the NCDA data.
 *
 * @throws EntityMetadataWrapperException
 */
function hedley_aggregated_ncda_generate_data_for_person($person_id) {
  $village_id = hedley_chw_find_person_village($person_id);
  if (!$village_id) {
    // We must know the village of person to be able to present NCDA data.
    return;
  }

  $person = node_load($person_id);
  $wrapper = entity_metadata_wrapper('node', $person);
  $birth_date = $wrapper->field_birth_date->value();
  if (empty($birth_date)) {
    // We must know the birthdate to be able to present NCDA data.
    return;
  }

  if ($birth_date < strtotime("-9 year")) {
    // We generate data for children only.
    // Our first records are from Jan 2018, so going back
    // 9 years to make sure we cover all children.
    return;
  }

  $data = [
    'person_id' => $person_id,
    'village_id' => $village_id,
    'birth_date' => date("Y-m-d", $birth_date),
  ];

  $encoded_data = json_encode($data);

  // Search for existing individual data node.
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'ncda_individual_data')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_person', 'target_id', $person_id)
    ->addTag('exclude_deleted')
    ->range(0, 1)
    ->execute();

  // If found, update JSON data.
  if (!empty($result['node'])) {
    $individual_data_id = key($result['node']);
    $data_wrapper = entity_metadata_wrapper('node', $individual_data_id);
    $data_wrapper->field_json_data->set($encoded_data);
    $data_wrapper->save();
    return;
  }

  // If we got so far, individual data node needs to be created.
  $data_node = entity_create('node', [
    'type' => 'ncda_individual_data',
    'uid' => $person->uid,
  ]);

  $data_wrapper = entity_metadata_wrapper('node', $data_node);
  $data_wrapper->field_person->set($person_id);
  $data_wrapper->field_json_data->set($encoded_data);
  $data_wrapper->save();
}
