<?php

/**
 * @file
 * Contains \HedleyRestfulTests.
 */

/**
 * HedleyRestfulTests tests.
 */
class HedleyRestfulTests extends HedleyWebTestBase {

  /**
   * Info hook.
   */
  public static function getInfo() {
    return [
      'name' => 'HedleyRestfulTests tests',
      'description' => 'Tests restful endpoints.',
      'group' => 'Hedley',
    ];
  }

  /**
   * Overrides \DrupalWebTestCase::setUp().
   */
  public function setUp() {
    parent::setUp();

    // This module is creating exception messages because of "Undefined index",
    // we don't need it, so just disabling it for the tests.
    module_disable(['restful_token_auth']);
  }

  /**
   * Tests access for training sessions for sandbox website.
   */
  public function testAccessTrainingSessions() {
    $clinic_node = $this->createClinic();
    $account = $this->createNurse($clinic_node->nid);

    try {
      $this->handleTrainingSessions($account, 'create_all');
      $this->fail("Expected a RestfulForbiddenException");
    }
    catch (RestfulForbiddenException $e) {
      $this->pass("Caught the expected exception");
    }
  }

  /**
   * Tests creating/deleting training sessions for sandbox website.
   */
  public function testHandlingTrainingSessions() {
    // Create a clinic to create a training session on it.
    $clinic_node = $this->createClinic();
    $account = $this->createAdministrator();
    $scheduled_date = date('Y-m-d', REQUEST_TIME);

    $this->handleTrainingSessions($account, 'create_all');
    $sessions_count = hedley_schedule_clinic_has_sessions($clinic_node->nid, $scheduled_date);
    // Assert that the training sessions were created.
    $this->assertEqual($sessions_count, 1);

    $this->handleTrainingSessions($account, 'delete_all');
    $sessions_count = hedley_schedule_clinic_has_sessions($clinic_node->nid, $scheduled_date);
    // Assert that the training sessions were deleted.
    $this->assertEqual($sessions_count, 0);
  }

  /**
   * Helper; Handles requests to the training sessions endpoint.
   *
   * @param object $account
   *   The user's account.
   * @param string $action
   *   The training session action.
   *
   * @return array
   *   The result from the training sessions endpoint.
   */
  protected function handleTrainingSessions($account, $action) {
    $handler = restful_get_restful_handler('training_session_actions');
    $handler->setAccount($account);
    $request = ['action' => $action];

    return $handler->post('', $request);
  }

}
